{"version":3,"sources":["theme/theme.js","components/Button/index.js","components/Input/index.js","components/Card/index.js","components/Layout/Box/index.js","components/Layout/Wrapper/index.js","components/Dropdown/index.js","app/slices/searchFieldSlice.js","app/slices/restaurantDataSlice.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["theme","breakpoints","Button","props","sharedStyles","display","InputBox","styled","padding","textAlign","width","marginBottom","Text","Container","flexDirection","alignItems","Input","label","type","StyledCard","children","as","listStyle","border","boxShadow","StyledBox","typography","space","color","layout","flexbox","position","shadow","Wrapper","Box","margin","css","StyledSelect","Dropdown","defaultText","options","defaultValue","value","map","item","key","searchFieldSlice","createSlice","name","initialState","reducers","updateSearchField","state","action","payload","actions","restaurantDataSlice","data","clearData","setData","App","dispatch","useDispatch","useSelector","restaurantData","searchField","useState","filter","setFilter","price","setPrice","modifiedData","setModifiedData","isSubmitting","setIsSubmitting","page","setPage","entries","setEntries","fetchData","pageNumber","searchCriteria","fetch","method","redirect","then","response","json","result","restaurants","total_entries","useEffect","filteredData","length","regex","RegExp","replace","test","address","area","parseInt","className","onChange","e","target","onKeyDown","keyCode","aria-label","onClick","index","tabIndex","id","counterSlice","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","searchFieldReducer","restaurantDataReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.733512ce.chunk.js","sourcesContent":["\r\nconst breakpoints = ['768px', '992px', '1200px'];\r\n\r\nexport const theme = {\r\n  breakpoints,\r\n};\r\n\r\nexport default theme;\r\n","import React from 'react';\r\n\r\nconst Button = ({...props}) => {\r\n    return (\r\n        <button {...props}>\r\n            \r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst sharedStyles = {\r\n    display: 'block'\r\n}\r\n\r\nconst InputBox = styled('input')({\r\n    ...sharedStyles,\r\n    padding: '10px',\r\n    textAlign: 'center',\r\n    width: '300px',\r\n    marginBottom: '16px',\r\n})\r\n\r\nconst Text = styled('p')({\r\n    ...sharedStyles\r\n})\r\n\r\nconst Container = styled('label')({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n})\r\n\r\n  \r\nconst Input = ({label, ...props}) => {\r\n    return (\r\n    <Container>\r\n        <Text>{label}</Text>\r\n        <InputBox \r\n            type='text'\r\n            {...props}/>\r\n    </Container>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport { Box } from '../index'\r\nimport styled from 'styled-components'\r\n\r\nconst Card = ({children, ...props}) => {\r\n    return (\r\n        <Box \r\n            as='li'\r\n            {...props}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst StyledCard = styled(Card)({\r\n    marginBottom: '20px',\r\n    width: '100%',\r\n    listStyle: 'none',\r\n    border: '1px solid black',\r\n    boxShadow: '10px 10px 5px 0px rgba(0,0,0,0.75)'\r\n})\r\n\r\nexport default StyledCard","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport {\r\n    typography,\r\n    space,\r\n    color,\r\n    layout,\r\n    flexbox,\r\n    border,\r\n    position,\r\n    shadow,\r\n  } from 'styled-system';\r\n\r\nconst Box = ({children, ...props}) => {\r\n    return (\r\n        <div {...props}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst StyledBox = styled(Box)(\r\n    typography,\r\n    space,\r\n    color,\r\n    layout,\r\n    flexbox,\r\n    border,\r\n    position,\r\n    shadow,\r\n)\r\n\r\nexport default StyledBox;","import Box from '../Box'\r\nimport css from '@styled-system/css'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled(Box)({\r\n    margin: '0 auto'\r\n},\r\ncss({\r\n    width: ['95%', '80%'],\r\n}),\r\n)\r\n\r\nexport default Wrapper","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledSelect = styled('select')({\r\n    width: '150px',\r\n    textAlign: 'center',\r\n})\r\n\r\nconst Dropdown = ({label, defaultText, children, options = [], ...props}) => {\r\n    return (\r\n        <label>\r\n            <p>{label}</p>\r\n            <StyledSelect {...props}>\r\n                <option defaultValue value=\"\">{defaultText}</option>\r\n                {options.map( item => \r\n                    \r\n                <option key={`${label}${item}`} value={item}>{item}</option>\r\n                    )}\r\n            </StyledSelect>\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Dropdown;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const searchFieldSlice = createSlice({\r\n    name: 'searchField',\r\n    initialState: { \r\n        value: '',\r\n    },\r\n    reducers: {\r\n        updateSearchField: (state, action) => {\r\n            state.value = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { updateSearchField } = searchFieldSlice.actions;\r\n\r\n\r\nexport default searchFieldSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const restaurantDataSlice = createSlice({\r\n    name: 'restaurantData',\r\n    initialState: {\r\n        data: []\r\n    },\r\n    reducers: {\r\n        clearData: state => {\r\n            state.data = []\r\n        },\r\n        setData: (state, action) => {\r\n            state.data = [...state.data, ...action.payload]\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setData, clearData } = restaurantDataSlice.actions;\r\n\r\n\r\nexport default restaurantDataSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { Button, Input, Card, Box, Wrapper, Dropdown } from './components';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateSearchField } from './app/slices/searchFieldSlice'\r\nimport { setData, clearData } from './app/slices/restaurantDataSlice'\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const data = useSelector(state => state.restaurantData?.data)\r\n  const searchField = useSelector(state => state.searchField.value)\r\n  const [filter, setFilter] = useState(\"\")\r\n  const [price, setPrice] = useState(\"\")\r\n  const [modifiedData, setModifiedData] = useState([])\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [page, setPage] = useState(1)\r\n  const [entries, setEntries] = useState(0)\r\n  const perPage = 100\r\n\r\n  \r\n  function fetchData(pageNumber, searchCriteria) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`https://opentable.herokuapp.com/api/restaurants?page=${page}&per_page=${perPage}&city=${searchCriteria}`, requestOptions)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        dispatch(setData(result.restaurants))\r\n        setPage(page + 1)\r\n        setEntries(result.total_entries - (perPage * page))\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isSubmitting) {\r\n      setIsSubmitting(false)\r\n      dispatch(clearData())\r\n      fetchData(page, searchField)\r\n    }\r\n  }, [isSubmitting])\r\n  \r\n  \r\n  useEffect(() => {\r\n    if (entries > 0) {\r\n      return fetchData(page, searchField)\r\n    } \r\n    setPage(1)\r\n    setEntries(0)\r\n  }, [entries])\r\n\r\n  useEffect(() => {\r\n    let filteredData;\r\n    if (filter?.length && data?.length) {\r\n      const regex = new RegExp(filter.replace(/[^a-z0-9]/gi, ''), 'gi')\r\n      filteredData = data.filter(item => regex.test(item.name) || regex.test(item.address) || regex.test(item.area))\r\n    }\r\n\r\n    filteredData = filteredData || []\r\n\r\n    if (price?.length) {\r\n      filteredData = filteredData.filter(item => item.price === parseInt(price))\r\n    }\r\n\r\n    if(!filteredData?.length && !price?.length) {\r\n      return setModifiedData(data)\r\n    }\r\n\r\n    setModifiedData(filteredData)\r\n\r\n  }, [filter, price, data])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Wrapper>\r\n        <h1>Restaurant Search</h1>\r\n        <Box>\r\n          <Input\r\n            label=\"Enter a city\" \r\n            onChange={e => dispatch(updateSearchField(e.target.value))}\r\n            onKeyDown={ e => {\r\n              if(e.keyCode === 13) {\r\n                setIsSubmitting(true)\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            aria-label=\"Search Button\"\r\n            onClick={()=>{\r\n              setIsSubmitting(true)\r\n            }}\r\n          >\r\n            Search\r\n          </Button>\r\n        </Box>\r\n        <Box>\r\n            <Input \r\n              label='Filter Results'\r\n              onKeyDown={ e => setFilter(e.target.value)}\r\n            />\r\n            <Dropdown \r\n              label='Sort by Price'\r\n              defaultText='Select a Price' \r\n              options={[1, 2, 3, 4]}\r\n              onChange={ e => {\r\n                setPrice(e.target.value)\r\n              }}\r\n              />\r\n        </Box>\r\n        <Box \r\n          as='ul'\r\n          padding='0'\r\n          >\r\n          {modifiedData?.length ? modifiedData.map((item, index) => \r\n            <Card\r\n              tabIndex={0} \r\n              key={item.id}>\r\n              <h2>{item.name}</h2>\r\n              <p>Address: {item.address}</p>\r\n              <p>Area: {item.area}</p>\r\n              <p>Price: {item.price}</p>\r\n            </Card>\r\n          ) : null}\r\n        </Box>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport searchFieldReducer from './slices/searchFieldSlice'\r\nimport restaurantDataReducer from './slices/restaurantDataSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    searchField: searchFieldReducer,\r\n    restaurantData: restaurantDataReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from './theme/theme'\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}